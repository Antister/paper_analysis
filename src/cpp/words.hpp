#pragma once

#include <string_view>
#include <unordered_set>

inline const std::unordered_set<std::string_view> STOPWORDS = {
    "-",
    "the",
    "a",
    "an",
    "of",
    "on",
    "in",
    "for",
    "to",
    "and",
    "or",
    "with",
    "without",
    "by",
    "at",
    "via",
    "from",
    "as",
    "is",
    "are",
    "was",
    "were",
    "be",
    "been",
    "being",
    "this",
    "that",
    "these",
    "those",
    "it",
    "its",
    "we",
    "our",
    "you",
    "your",
    "they",
    "their",
    "can",
    "could",
    "may",
    "might",
    "will",
    "would",
    "shall",
    "should",
    "do",
    "does",
    "did",
    "have",
    "has",
    "had",
    "but",
    "if",
    "then",
    "else",
    "what",
    "why",
    "how",
    "when",
    "where",
    "while",
    "because",
    "so",
    "than",
    "such",
    "also",
    "through",
    "low",
    "high",
    "between",
    "let",
    "over",
    "under",
    "during",
    // CS specific
    "using",
    "use",
    "based",
    "approach",
    "method",
    "study",
    "analysis",
    "model",
    "models",
    "system",
    "systems",
    "framework",
    "frameworks",
    "algorithm",
    "algorithms",
    "application",
    "applications",
    "design",
    "implementation",
    "result",
    "results",
    "performance",
    "evaluation",
    "experimental",
    "experiment",
    "experiments",
    "case",
    "cases",
    "proposed",
    "new",
    "novel",
    "efficient",
    "effective",
    "robust",
    "fast",
    "automatic",
    "towards",
    "overview",
    "review",
    "survey",
    "comparison",
    "computing",
    "computer",
    "computers",
    "information",
    "data",
    "dataset",
    "datasets",
    "network",
    "networks",
    "neural",
    "deep",
    "learning",
    "machine",
    "vision",
    "control",
    "optimization",
    "processing",
    "signal",
    "image",
    "images",
    "video",
    "videos",
    "speech",
    "text",
    "natural",
    "knowledge",
    "base",
    "engineering",
    "software",
    "hardware",
    "platform",
    "cloud",
    "edge",
    "digital",
    "interactive",
    "user",
    "development",
    "integration",
    "tool",
    "tools",
    "technique",
    "techniques",
    "technology",
    "technologies",
    "research",
    "feature",
    "local",
    "support",
    "multiple",
    "planning",
    "large",
    "improved",
    "improving",
    "problem",
    "impact",
    "optimal",
    "dynamic",
    "optional",
    "training",
    "exploring",
    "enhancing",
    "management",
    "students",
    "domain",
    "time",
    "de",
    "methods",
    "understanding",
    "effect",
    "task",
    "quality",
};

constexpr auto TERMINOLOGY_MIN_WORDS = 2uz;
constexpr auto TERMINOLOGY_MAX_WORDS = 3uz;
inline const std::unordered_set<std::string_view> TERMINOLOGY = {
    "machine learning",
    "deep learning",
    "reinforcement learning",
    "transfer learning",
    "supervised learning",
    "unsupervised learning",
    "semi-supervised learning",
    "few-shot learning",
    "zero-shot learning",
    "meta learning",
    "representation learning",
    "self-supervised learning",
    "multi-task learning",
    "federated learning",
    "continual learning",
    "curriculum learning",
    "online learning",
    "active learning",
    "incremental learning",
    "generative model",
    "discriminative model",
    "language model",
    "foundation model",
    "diffusion model",
    "generative pre-trained transformer",
    "transformer model",
    "large language model",
    "pre-trained model",
    "neural network",
    "convolutional neural network",
    "recurrent neural network",
    "graph neural network",
    "feedforward neural network",
    "generative adversarial network",
    "autoencoder network",
    "variational autoencoder",
    "attention mechanism",
    "self-attention mechanism",
    "multi-head attention",
    "position embedding",
    "word embedding",
    "contextual embedding",
    "natural language processing",
    "named entity recognition",
    "part-of-speech tagging",
    "text classification",
    "sentiment analysis",
    "question answering",
    "machine translation",
    "language generation",
    "text summarization",
    "knowledge graph",
    "information retrieval",
    "semantic search",
    "document retrieval",
    "visual question answering",
    "image classification",
    "object detection",
    "instance segmentation",
    "semantic segmentation",
    "image captioning",
    "human pose estimation",
    "facial recognition",
    "optical flow estimation",
    "video classification",
    "action recognition",
    "3d reconstruction",
    "depth estimation",
    "scene understanding",
    "point cloud processing",
    "multi-modal learning",
    "cross-modal retrieval",
    "computer vision",
    "speech recognition",
    "speaker verification",
    "speech synthesis",
    "audio classification",
    "robot navigation",
    "motion planning",
    "path planning",
    "autonomous driving",
    "human-computer interaction",
    "recommender system",
    "collaborative filtering",
    "matrix factorization",
    "graph embedding",
    "graph mining",
    "graph representation",
    "graph convolution",
    "social network analysis",
    "community detection",
    "anomaly detection",
    "outlier detection",
    "feature selection",
    "feature extraction",
    "data augmentation",
    "dimensionality reduction",
    "principal component analysis",
    "t-sne visualization",
    "k-means clustering",
    "hierarchical clustering",
    "support vector machine",
    "decision tree",
    "random forest",
    "naive bayes",
    "logistic regression",
    "bayesian network",
    "markov decision process",
    "monte carlo method",
    "gradient descent",
    "stochastic gradient descent",
    "backpropagation algorithm",
    "dropout regularization",
    "batch normalization",
    "data mining",
    "big data",
    "data warehouse",
    "data lake",
    "cloud computing",
    "edge computing",
    "distributed system",
    "parallel computing",
    "high performance computing",
    "resource allocation",
    "load balancing",
    "task scheduling",
    "fault tolerance",
    "consistency model",
    "eventual consistency",
    "distributed consensus",
    "paxos algorithm",
    "raft algorithm",
    "blockchain technology",
    "smart contract",
    "cryptographic protocol",
    "digital signature",
    "public key encryption",
    "secure computation",
    "differential privacy",
    "homomorphic encryption",
    "trusted execution environment",
    "zero knowledge proof",
    "cyber security",
    "network security",
    "web security",
    "intrusion detection",
    "malware analysis",
    "software vulnerability",
    "access control",
    "identity management",
    "secure authentication",
    "software engineering",
    "software testing",
    "code generation",
    "program synthesis",
    "static analysis",
    "dynamic analysis",
    "symbolic execution",
    "model checking",
    "bug detection",
    "version control",
    "compiler optimization",
    "intermediate representation",
    "control flow graph",
    "memory management",
    "garbage collection",
    "type inference",
    "formal verification",
    "computational complexity",
    "automata theory",
    "graph algorithm",
    "shortest path algorithm",
    "maximum flow algorithm",
    "approximation algorithm",
    "greedy algorithm",
    "divide and conquer",
    "dynamic programming",
    "probabilistic model",
    "statistical model",
    "causal inference",
    "reinforcement signal",
    "simulation environment",
    "benchmark dataset",
    "open source framework",
    "scalable architecture",
    "cloud platform",
    "edge device",
    "mobile application",
    "web application",
    "api design",
    "user interface",
    "user experience",
    "accessibility support",
    "debugging tool",
    "visualization tool",
    "interactive system",
    "collaborative platform",
};